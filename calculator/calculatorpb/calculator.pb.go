// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	X                    int32    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *SumRequest) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type SumResponse struct {
	Sum                  int32    `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

type PNDRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PNDRequest) Reset()         { *m = PNDRequest{} }
func (m *PNDRequest) String() string { return proto.CompactTextString(m) }
func (*PNDRequest) ProtoMessage()    {}
func (*PNDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *PNDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PNDRequest.Unmarshal(m, b)
}
func (m *PNDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PNDRequest.Marshal(b, m, deterministic)
}
func (m *PNDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PNDRequest.Merge(m, src)
}
func (m *PNDRequest) XXX_Size() int {
	return xxx_messageInfo_PNDRequest.Size(m)
}
func (m *PNDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PNDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PNDRequest proto.InternalMessageInfo

func (m *PNDRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PNDResponse struct {
	Prime                int32    `protobuf:"varint,1,opt,name=prime,proto3" json:"prime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PNDResponse) Reset()         { *m = PNDResponse{} }
func (m *PNDResponse) String() string { return proto.CompactTextString(m) }
func (*PNDResponse) ProtoMessage()    {}
func (*PNDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *PNDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PNDResponse.Unmarshal(m, b)
}
func (m *PNDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PNDResponse.Marshal(b, m, deterministic)
}
func (m *PNDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PNDResponse.Merge(m, src)
}
func (m *PNDResponse) XXX_Size() int {
	return xxx_messageInfo_PNDResponse.Size(m)
}
func (m *PNDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PNDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PNDResponse proto.InternalMessageInfo

func (m *PNDResponse) GetPrime() int32 {
	if m != nil {
		return m.Prime
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*PNDRequest)(nil), "calculator.PNDRequest")
	proto.RegisterType((*PNDResponse)(nil), "calculator.PNDResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x86, 0x6b, 0xaa, 0x76, 0xb8, 0x56, 0x08, 0x59, 0xa8, 0x44, 0x2c, 0x20, 0xc3, 0x90, 0xa9,
	0x20, 0x58, 0x98, 0x51, 0xe7, 0x52, 0x35, 0x1b, 0x5b, 0x62, 0xdd, 0x60, 0x29, 0x8e, 0x8d, 0x3f,
	0x50, 0xf2, 0x4b, 0xf8, 0xbb, 0x28, 0x8e, 0x91, 0x1d, 0xb1, 0xdd, 0x7b, 0x7a, 0xf4, 0xf8, 0xf5,
	0x41, 0xc9, 0xeb, 0x96, 0xfb, 0xb6, 0x76, 0xca, 0x3c, 0xa5, 0x51, 0x37, 0x59, 0xd8, 0x6b, 0xa3,
	0x9c, 0xa2, 0x90, 0x36, 0xac, 0x04, 0xa8, 0xbc, 0x3c, 0xe3, 0x97, 0x47, 0xeb, 0xe8, 0x16, 0x48,
	0x5f, 0x90, 0x7b, 0x52, 0xae, 0xce, 0xa4, 0x1f, 0xd3, 0x50, 0x5c, 0x4c, 0x69, 0x60, 0x77, 0xb0,
	0x09, 0xa4, 0xd5, 0xaa, 0xb3, 0x48, 0xaf, 0x60, 0x69, 0xbd, 0x8c, 0xf0, 0x38, 0xb2, 0x47, 0x80,
	0xd3, 0xf1, 0xf0, 0xa7, 0xda, 0xc1, 0xba, 0xf3, 0xb2, 0x41, 0x13, 0x91, 0x98, 0xd8, 0x03, 0x6c,
	0x02, 0x15, 0x35, 0xd7, 0xb0, 0xd2, 0x46, 0x48, 0x8c, 0xd4, 0x14, 0x5e, 0x7e, 0x48, 0xa8, 0x55,
	0xa1, 0xf9, 0x16, 0x1c, 0xe9, 0x1b, 0x2c, 0x2b, 0x2f, 0xe9, 0x6e, 0x9f, 0x7d, 0x25, 0xb5, 0xbe,
	0xbd, 0xf9, 0xb7, 0x9f, 0xe4, 0x6c, 0x41, 0x3f, 0xa0, 0x38, 0x8d, 0xc6, 0x63, 0x78, 0xfc, 0x80,
	0x5c, 0x49, 0xad, 0xac, 0x70, 0x42, 0x75, 0x73, 0x5d, 0x6a, 0x3e, 0xd7, 0x65, 0x5d, 0xd9, 0xe2,
	0x99, 0xbc, 0x5f, 0x7e, 0x6e, 0xf3, 0xe3, 0x36, 0xeb, 0x70, 0xd2, 0xd7, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x4f, 0x5b, 0x35, 0x61, 0x7e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SumServiceClient is the client API for SumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SumServiceClient interface {
	// Unary
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	// server streaming
	PrimeNumberDecomposition(ctx context.Context, in *PNDRequest, opts ...grpc.CallOption) (SumService_PrimeNumberDecompositionClient, error)
}

type sumServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSumServiceClient(cc grpc.ClientConnInterface) SumServiceClient {
	return &sumServiceClient{cc}
}

func (c *sumServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.SumService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sumServiceClient) PrimeNumberDecomposition(ctx context.Context, in *PNDRequest, opts ...grpc.CallOption) (SumService_PrimeNumberDecompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SumService_serviceDesc.Streams[0], "/calculator.SumService/PrimeNumberDecomposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &sumServicePrimeNumberDecompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SumService_PrimeNumberDecompositionClient interface {
	Recv() (*PNDResponse, error)
	grpc.ClientStream
}

type sumServicePrimeNumberDecompositionClient struct {
	grpc.ClientStream
}

func (x *sumServicePrimeNumberDecompositionClient) Recv() (*PNDResponse, error) {
	m := new(PNDResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SumServiceServer is the server API for SumService service.
type SumServiceServer interface {
	// Unary
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	// server streaming
	PrimeNumberDecomposition(*PNDRequest, SumService_PrimeNumberDecompositionServer) error
}

// UnimplementedSumServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSumServiceServer struct {
}

func (*UnimplementedSumServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedSumServiceServer) PrimeNumberDecomposition(req *PNDRequest, srv SumService_PrimeNumberDecompositionServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeNumberDecomposition not implemented")
}

func RegisterSumServiceServer(s *grpc.Server, srv SumServiceServer) {
	s.RegisterService(&_SumService_serviceDesc, srv)
}

func _SumService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.SumService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SumService_PrimeNumberDecomposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PNDRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SumServiceServer).PrimeNumberDecomposition(m, &sumServicePrimeNumberDecompositionServer{stream})
}

type SumService_PrimeNumberDecompositionServer interface {
	Send(*PNDResponse) error
	grpc.ServerStream
}

type sumServicePrimeNumberDecompositionServer struct {
	grpc.ServerStream
}

func (x *sumServicePrimeNumberDecompositionServer) Send(m *PNDResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _SumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.SumService",
	HandlerType: (*SumServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _SumService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumberDecomposition",
			Handler:       _SumService_PrimeNumberDecomposition_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
